// Generated by Karakum - do not modify it manually!


package fluentui

// unhandled import: ActiveDescendantContextValue from "@fluentui/react-aria" 
// unhandled import: ActiveDescendantImperativeRef from "@fluentui/react-aria" 
// unhandled import: ComponentProps from "@fluentui/react-utilities" 
// unhandled import: ComponentState from "@fluentui/react-utilities" 
// unhandled import: ContextSelector from "@fluentui/react-context-selector" 
// unhandled import: FC from "react" 
// unhandled import: ForwardRefComponent from "@fluentui/react-utilities" 
// unhandled import: PortalProps from "@fluentui/react-portal" 
// unhandled import: PositioningShorthand from "@fluentui/react-positioning" 
// unhandled import: Provider from "react" 
// unhandled import: ProviderProps from "react" 
// unhandled import: Slot from "@fluentui/react-utilities" 
// unhandled import: SlotClassNames from "@fluentui/react-utilities" 

/**
 * ComboboxBase Props
 * Shared types between Combobox and Dropdown components
 */

sealed external interface ComboboxBaseProps {
    /**
     * Controls the colors and borders of the combobox trigger.
     * @default 'outline'
     */
    var appearance: (Temp174)?

    /**
     * If set, the combobox will show an icon to clear the current value.
     */
    var clearable: Boolean?

    /**
     * The default open state when open is uncontrolled
     */
    var defaultOpen: Boolean?

    /**
     * The default value displayed in the trigger input or button when the combobox's value is uncontrolled
     */
    var defaultValue: String?

    /**
     * Render the combobox's popup inline in the DOM.
     * This has accessibility benefits, particularly for touch screen readers.
     */
    var inlinePopup: Boolean?

    /**
     * Callback when the open/closed state of the dropdown changes
     */
    var onOpenChange: ((e: ComboboxBaseOpenEvents, data: ComboboxBaseOpenChangeData) -> Unit)?

    /**
     * Sets the open/closed state of the dropdown.
     * Use together with onOpenChange to fully control the dropdown's visibility
     */
    var open: Boolean?

    /**
     * If set, the placeholder will show when no value is selected
     */
    var placeholder: String?

    /**
     * Configure the positioning of the combobox dropdown
     *
     * @defaultvalue below
     */
    var positioning: dynamic

    /**
     * Controls the size of the combobox faceplate
     * @default 'medium'
     */
    var size: (Temp175)?

    /**
     * The value displayed by the Combobox.
     * Use this with `onOptionSelect` to directly control the displayed value string
     */
    var value: String?
}
