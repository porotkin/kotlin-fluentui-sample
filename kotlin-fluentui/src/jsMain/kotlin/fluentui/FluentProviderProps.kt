// Generated by Karakum - do not modify it manually!


package fluentui

import react.PropsWithChildren
import web.dom.Document

// unhandled import: ComponentProps from "@fluentui/react-utilities" 
// unhandled import: ComponentState from "@fluentui/react-utilities" 
// unhandled import: CustomStyleHooksContextValue_unstable from "@fluentui/react-shared-contexts" 
// unhandled import: IconDirectionContextValue from "@fluentui/react-icons" 
// unhandled import: OverridesContextValue_unstable from "@fluentui/react-shared-contexts" 
// unhandled import: PartialTheme from "@fluentui/react-theme" 
// unhandled import: ProviderContextValue_unstable from "@fluentui/react-shared-contexts" 
// unhandled import: Slot from "@fluentui/react-utilities" 
// unhandled import: SlotClassNames from "@fluentui/react-utilities" 
// unhandled import: Theme from "@fluentui/tokens" 
// unhandled import: ThemeClassNameContextValue_unstable from "@fluentui/react-shared-contexts" 
// unhandled import: ThemeContextValue_unstable from "@fluentui/react-shared-contexts" 
// unhandled import: TooltipVisibilityContextValue_unstable from "@fluentui/react-shared-contexts" 


sealed external interface FluentProviderProps : FluentProviderSlots, PropsWithChildren {
    /**
     * Passes styles applied to a component down to portals if enabled.
     * @default true
     */
    var applyStylesToPortals: Boolean?

    /** Sets the hooks for custom styling components. */
    var customStyleHooks_unstable: FluentProviderCustomStyleHooks?

    /** Sets the direction of text & generated styles. */
    var dir: (Temp119)?

    /** Provides the document, can be undefined during SSR render. */
    var targetDocument: Document?

    /** Sets the theme used in a scope. */
    var theme: dynamic
}
