// Generated by Karakum - do not modify it manually!


package fluentui

import react.Ref
import web.html.HTMLElement

// unhandled import: ComponentProps from "@fluentui/react-utilities" 
// unhandled import: ComponentState from "@fluentui/react-utilities" 
// unhandled import: DialogProps from "@fluentui/react-dialog" 
// unhandled import: DialogSurfaceProps from "@fluentui/react-dialog" 
// unhandled import: DialogSurfaceSlots from "@fluentui/react-dialog" 
// unhandled import: ForwardRefComponent from "@fluentui/react-utilities" 
// unhandled import: Slot from "@fluentui/react-utilities" 
// unhandled import: SlotClassNames from "@fluentui/react-utilities" 


sealed external interface MotionState<Element : HTMLElement /* default is HTMLElement */> {
    /**
     * Ref to the element.
     */
    var ref: Ref<Element>

    /**
     * Current state of the element.
     *
     * - `unmounted` - The element is not yet rendered or can be safely removed from the DOM.
     * - `entering` - The element is performing enter animation.
     * - `entered` - The element has finished enter animation.
     * - `idle` - The element is currently not animating, but rendered on screen.
     * - `exiting` - The element is performing exit animation.
     * - `exited` - The element has finished exit animation.
     */
    var type: MotionType

    /**
     * Indicates whether the component can be rendered.
     * Useful to render the element before animating it or to remove it from the DOM after exit animation.
     */
    var canRender: Boolean

    /**
     * Indicates whether the component is ready to receive a CSS transition className.
     * Useful to apply CSS transitions when the element is mounted and ready to be animated.
     */
    var active: Boolean
}
